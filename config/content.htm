<h1>week</h1>
<p><a href="https://s40723221.github.io/cd2020/content/week1-5.html">week1-week5</a></p>
<p><a href="https://s40723221.github.io/cd2020/content/week2-9.html">week6-week9</a></p>
<p><a href="https://s40723221.github.io/cd2020/content/week10-14.html">week10-week14</a></p>
<p><a href="https://s40723221.github.io/cd2020/content/week15-18.html">week15-week18</a></p>
<h2>week1-5</h2>
<h4><strong><span style="color: #0000ff;">week1</span></strong></h4>
<hr/>
<p>1.登入自己的github帳戶，並且創建名為cd2020的個人倉儲。</p>
<p>2.進入存放的資料夾例如;tmp</p>
<p>3.在小黑窗上打上git clone https://github.com/s40723221/cd2020。</p>
<p>4.git submodule add https://github.com/mdecourse/cmsimde.git。</p>
<p>5.完成後使用cd cd2020 -&gt;cd cmsimde進入cmsimde的資料夾內。</p>
<p>6.完成之後使用python wsgi.py進入靜態9443內編輯個人網站的資料。</p>
<p>7.使用git add .  -&gt; commit -m ＂標題＂ -&gt; git push將剛剛編輯好的東西上傳。</p>
<p>8.進入個人倉儲的setting中更改branch(分支)至master。</p>
<p><span style="color: #ff0000;">影片教學:</span></p>
<p><span style="color: #ff0000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/V7Njg-o9bm4" width="560"></iframe></span></p>
<hr/>
<h4><strong><span style="color: #0000ff;">week2</span></strong></h4>
<p><strong><span style="color: #0000ff;">將可攜系統下的python 3.7.3系統更新至python 3.8.2</span></strong></p>
<p><span>1.進入<a href="https://www.python.org/downloads/windows/">https://www.python.org/downloads/windows/</a></span></p>
<p><span>2.往下滑到最底，下載<a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2-amd64.exe">Windows x86-64 executable installer</a>(上下兩者分別為<a href="https://www.python.org/ftp/python/3.7.7/python-3.7.7-embed-amd64.zip">Windows x86-64 embeddable zip file</a>和<a href="https://www.python.org/ftp/python/3.7.7/python-3.7.7-amd64-webinstall.exe">Windows x86-64 web-based installer</a>這兩者是嵌入式64位元python的可執行壓縮檔案和64位元網際端的可執行檔案)在本次可熙的更新中不會使用到</span></p>
<p><span><img alt="" height="104" src="/images/python 執行檔.PNG" width="409"/></span></p>
<p><span>3.接著開始下載切記不要勾選pip選項，接著按下next</span></p>
<p><span>4.先將下載下來的python3.8.2放置桌面，並且將y槽下的data新增加一個py382的資料夾方便之後可以做測試是否3.8.2之python可以正常的運行</span></p>
<p><span>5.將剛剛下載之python3.8.2放置於剛剛創建的py382中切記不要將原先的py373刪除，若之後py382的執行產生錯誤才可以使用py373做返回原版本的動作</span></p>
<p><span>6.更改執行檔start_mdecourse.bat</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
set Disk=y
subst %Disk%: "data"

%Disk%:

set HomePath=%Disk%:\home_mdecourse
set HomeDrive=%Disk%:\home_mdecourse
set Home=%Disk%:\home_mdecourse
set USERPROFILE=%Disk%:\home_mdecourse

REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"

set PYTHONPATH=%Disk%:\py373\DLLs;%Disk%:\py373\Lib;%Disk%:\py373\Lib\site-packages;
set PYTHONHOME=%Disk%:\py373

set GIT_HOME=%Disk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe

set path_python=%Disk%:\py373;%Disk%:\py373\Scripts;
set path_msys2=%Disk%:\msys64\mingw64\bin;
REM coreutils is for compiling fossil scm
set path_coreutils=%Disk%:\coreutils-5.3.0\bin;%Disk%:\depends22_x64;
set path_tcc=%Disk%:\tcc;
set path_cmake=%Disk%:\cmake-3.10.1-win64-x64\bin;
set path_nodejs=Disk%:\nodejs;%Disk%:\nodejs\appdata\roaming\npm;
set path_git=%Disk%:\portablegit\bin;
set path_xming=%Disk%:\Xming;
set path_latex=%%Disk%:\Pandoc;%Disk%:\TinyTeX\bin\win32;

path=%Disk%:;%path_python%;%path_msys2%;%path_tcc%;%path_git%;%path_cmake%;%path_coreutils%;

start /MIN %Disk%:\wscite415\wscite\SciTE.exe
start /MIN %Disk%:\wscite415\wscite\SciTE.exe

start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe


Exit</pre>
<p><span></span>7.重新啟動剛剛更新的執行檔</p>
<p>8.執行python -m pip install <strong>flask flask-cors markdown lxml bs4 pelican leo</strong></p>
<hr/>
<p><span style="color: #0000ff;"><strong>git pull request操作說明:</strong></span></p>
<p><span style="color: #000000;">1.以自己github之帳號fork老師的倉儲也就是<span style="color: #ff0000;">fork</span>:<a href="https://github.com/mdecourse/cd2020">https://github.com/mdecourse/cd2020</a></span></p>
<p><span style="color: #000000;">2.接下來到自己的倉儲中找到剛剛fork下來的老師倉儲並且複製網址</span></p>
<p><span style="color: #000000;">3.利用git clone 自己帳號下老師的網址</span></p>
<p><span style="color: #000000;">4.在執行git submodule add <a href="https://github.com/mdecourse/cmsimde.git">https://github.com/mdecourse/cmsimde.git</a></span></p>
<p><span style="color: #000000;">5.進入到9443開始編輯自己帳號下老師的網站</span></p>
<p><span style="color: #000000;">6.編輯完成後執行git add commit push三個步驟</span></p>
<p><span style="color: #000000;">7.利用自己帳號下修改完成的老師倉儲建立新的pull request</span></p>
<p><span style="color: #000000;"><img alt="" height="84" src="/images/new pull request.PNG" width="207"/></span></p>
<p><span style="color: #000000;"><img alt="" height="97" src="/images/add commit pull request.PNG" width="1018"/></span></p>
<p><span style="color: #000000;">8.按下提交之後等待老師接受並且merge即可完成此次的pull request</span></p>
<p><span style="color: #0000ff;"><strong><span color="#000000">w2直播進程:</span></strong></span></p>
<p><span style="color: #ff0000;"><strong><span color="#000000">分工內容:</span></strong></span></p>
<p><span style="color: #000000;"><span color="#000000">40523253:亂數分組程式<br/>40623117:亂數分組程式<br/>40623252:4輪車 <br/>40723221 (group leader) :4輪車 <br/>40723222:4輪車 <br/>40723228:亂數分組程式<br/>40723236:4輪車 <br/>40723237:可攜系統<br/>40723240:4輪車 <br/>40723243:4輪車 <br/>40723244:可攜系統<br/>40723249:可攜系統 <br/>40732331:4輪車 </span></span></p>
<p><span style="color: #ff0000;"><strong><span color="#000000">注意事項:</span></strong></span></p>
<p><span style="color: #000000;"><span color="#000000">1.視課堂進度上傳影片<br/>2.不管會不會做每周都要push<br/>3.可以從gitter上面提問<br/>4.直播大家輪流主持，直播前半部分有教大家如何開直播了<br/>5.git pull request每個人都要會之後要更改東西比較方便<br/>6.不會做的可以去看我的網站我會盡可能提早更新，再不行就到gitter上面提問可以在這邊提問 gitter:https://gitter.im/mdecourse/cd2020<br/>7.2020年3月26日到期assignment 1的pdf繳交請在時間內上傳到自己倉儲的download上<br/>8.pdf上寫上進度，之後打分數依照pdf打分</span></span></p>
<p><span style="color: #ff0000;"><strong><span color="#000000">直播進程影片:</span></strong></span></p>
<p><strong><span style="color: #0000ff;"><span color="#000000" style="color: #000000;"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HXS95dlMSv8" width="560"></iframe></span></span></strong></p>
<hr/>
<p></p>
<h2>week6-9</h2>
<h2>week10-14</h2>
<h2>week15-18</h2>
<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>